@{
    @using TFG.Models
    @model TFG.Models.Metatable

    ViewData["Title"] = "Database Connection";


}
@using (Html.BeginForm("GoToPage", "Home"))
{
    <input type="text" id="functionalitySelected3" class="functionalitySelected" name="functionalitySelected" />
    <input type="text" id="selection" class="functionalitySelected" name="selection" />
    <input id="hidden-btn3" class="hidden-btn" type="submit" style="display: none;" />
}
<!-- A navegation bar which does not navigate, it only shows the chosen database name along with a button that
    allows the user to go to the corresponding page to change it, if needed and show the current page (receiving the functionality selected from the controller)-->
<nav class="navbar nav_color_1">
    <div id="Top-container">
        <div id="Top">
            <span class='database_icon'></span>
            <span class="top-text">@Model.database</span>
            <button type="button" onclick='window.location.href="DatabaseConnection"' class="btn btn-default" data-toggle="tooltip" data-placement="auto" title="Change database"><span class='folder_icon'></span></button>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a id="selection-a" onclick="goToPage('MainPage', false)" style="color: orange;" MainPage">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page"><text>@Model.functionalities_text[Model.functionality]</text> Selection</li>
            </ol>
        </div>
    </div>
</nav>
<!-- This part is the most complicated of this view
    It gets the data sent from the controller (double array with the database entry.Value names and column names of each entry.Value)
    Then it creates for each entry.Value an item of an accordion which when expanded shows its columns with checkboxes for all of those items-->
<div id="middle_container" class="left-half">
    <div id="selection-top" class="centeredBig">
        <h3>
            @if (@Model.functionalities_need_columns[Model.functionality])
            {
                <span>Tables and columns selection</span>
            }
            else
            {
                <span>Tables selection</span>
            }
        </h3>
    </div>
    <div id="accordion" class="overflow-auto centeredBig">
        @foreach (KeyValuePair<string, string[]> entry in Model.ColumnsSelected)
        {
            string collapse = "#collapse" + entry.Key;
            string div = entry.Key + "Div";
            string CheckBox = entry.Key + "CheckBox";

            <div class="card">
                <div class="card-header nav_color_1" id="@div">
                    <h5>
                        <input type="checkbox" id="@CheckBox" name="@entry.Key" onclick="checkChilds('@CheckBox')" />
                        <button class="btn btn-link" data-toggle="collapse" data-target="@collapse" aria-expanded="true" aria-controls="collapseOne">
                            @entry.Key
                        </button>
                    </h5>
                </div>
                @if (@Model.functionalities_need_columns[Model.functionality])
                {
                    <div id="@collapse.Substring(1)" class="collapse hide" aria-labelledby="@entry.Key" data-parent="#accordion">
                        <div class="card-body nav_color_2">
                            @for (int i = 0; i < ((string[])entry.Value).Length; i++)
                            {
                                <input type="checkbox" id="@entry.Value[i]" onclick="checkParent('@CheckBox', '@entry.Value[i]')" data-parent="@CheckBox" /> <span style="color: white;">@entry.Value[i]</span>
                                <br />
                            }
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>
<!-- This part is perform whole actions like selecting everything or nothing and running the functionality with the selected items -->
<div id="controls">
    <div class="btn-group" role="group" style="padding-top: 20vh;">
        <button type="button" onclick="selectAll()" class="btn btn-outline-primary">Select All</button>
        <button type="button" onclick="selectNone()" class="btn btn-outline-dark">Select None</button>
    </div>
    <br />
    <span id="selection-text">None selected</span>
    <div id="controls-inside">
        <button type="button" onclick='goToPage("@Model.functionality", true)' class="btn btn-outline-primary">Confirm and run</button>
    </div>
</div>