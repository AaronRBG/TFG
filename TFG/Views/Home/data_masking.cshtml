@{
    @using TFG.Models
    @model TFG.Models.ScriptsResults

    ViewData["Title"] = "Data Masking Report";
}
<!-- A navegation bar which does not navigate, it only shows the chosen database name along with a button that
    allows the user to go to the corresponding page to change it, if needed and show the current page (receiving the functionality selected from the controller)-->
<nav class="navbar nav_color">
    <div id="Top-container">
        <div id="Top">
            <span class='database_icon'></span>
            <span class="top-text">@Model.database</span>
            <button type="button" onclick='window.location.href="DatabaseConnection"' class="btn btn-default" data-toggle="tooltip" data-placement="auto" title="Change database"><span class='folder_icon'></span></button>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="MainPage" MainPage">Home</a></li>
                <li class="breadcrumb-item"><a href="create_masks" MainPage">Create Masks</a></li>
                <li class="breadcrumb-item active" aria-current="page">Data Masking Report</li>
            </ol>
        </div>
    </div>
</nav>
<!-- This part is the most complicated of this view
    It gets the data sent from the controller (double array with the database table names and column names of each table)
    Then it creates for each table an item of an accordion which when expanded shows its columns with checkboxes for all of those items-->
<div id="middle_container" class="left-half">
    <div id="selection-top" class="centeredBig">
        <h3>
            <span>Data Masking Report</span>
        </h3>
    </div>
    <div id="accordion" class="overflow-auto left-half" style="width:15vw;">
        @foreach (KeyValuePair<string, string[]> entry in Model.ColumnsSelected)
        {
            string collapse = "#collapse" + entry.Key;
            string CheckBox = entry.Key + "CheckBox";

            <div class="card nav_color">
                <div class="card-header" id="@entry.Key">
                    <h5>
                        <input type="checkbox" id="@CheckBox" name="@entry.Key" onclick="checkChilds('@CheckBox')" />
                        <button class="btn btn-link" data-toggle="collapse" data-target="@collapse" aria-expanded="true" aria-controls="collapseOne">
                            @entry.Key
                        </button>
                    </h5>
                </div>

                <div id="@collapse.Substring(1)" class="collapse hide" aria-labelledby="@entry.Key" data-parent="#accordion">
                    <div class="card-body">
                        @for (int i = 0; i < ((string[])entry.Value).Length; i++)
                        {
                            string name = @entry.Key + '.' + @entry.Value[i];
                            <input type="checkbox" id="@entry.Value[i]" onclick="checkParent('@CheckBox', '@entry.Value[i]')" data-parent="@CheckBox" /> <button class="btn btn-link" onclick="openTab(event, '@name')">@entry.Value[i]</button>
                            <br />
                        }
                    </div>
                </div>

            </div>
        }
    </div>
    @using (Html.BeginForm("Confirm", "Home"))
    {
        <input type="text" id="functionalitySelected5" name="functionalitySelected" />
        <input type="text" id="data" name="data" />
        <input id="hidden-btn5" class="hidden-btn" type="submit" style="display: none;" />
    }
    <div id="Tab-contents" class="overflow-auto">
        @foreach (KeyValuePair<string, string[]> entry in Model.ColumnsSelected)
        {
            for (int i = 0; i < entry.Value.Length; i++)
            {
                string name = @entry.Key + '.' + @entry.Value[i];
                string masked = name + "Masked";
                string[] record = Model.records[name];
                string[] recordMasked = Model.records[masked];

                <div id="@name" class="tabcontent" style="display: none;">
                    <table class="table table-striped overflow-auto">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">@entry.Value[i]</th>
                                <th scope="col">@entry.Value[i]Masked</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int j = 1; j <= record.Length; j++)
                            {
                                <tr>
                                    <th scope="row">@j</th>

                                    <td>@record[j - 1]</td>

                                    <td>@recordMasked[j - 1]</td>

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            }
        }
    </div>
</div>
<!-- This part is perform whole actions like selecting everything or nothing and running the functionality with the selected items -->
<div id="controls">
    <div class="btn-group" role="group" style="padding-top: 20vh;">
        <button type="button" onclick="selectAll()" class="btn btn-outline-primary">Select All</button>
        <button type="button" onclick="selectNone()" class="btn btn-outline-dark">Select None</button>
    </div>
    <br />
    <span id="selection-text">None selected</span>
    <div id="controls-inside">
        <button type="button" onclick='confirm("@Model.functionality")' class="btn btn-outline-primary">Confirm and run</button>
    </div>
    <br />
    <div id="controls-inside">
        <button type="button" onclick="download()" class="btn btn-outline-primary"><span class='download_icon'></span></button>
    </div>
</div>
