@{
    @using TFG.Models
    @model TFG.Models.Interchange

    ViewData["Title"] = "Data Masking Report";
}
@using (Html.BeginForm("GoToSelection", "Home"))
{
    <input type="text" id="functionalitySelected1" class="functionalitySelected" name="functionalitySelected" />
    <input id="hidden-btn1" class="hidden-btn" type="submit" style="display: none;" />
}
@using (Html.BeginForm("GoBackToPage", "Home"))
{
    <input type="text" id="functionalitySelected3" class="functionalitySelected" name="functionalitySelected" />
    <input id="hidden-btn3" class="hidden-btn" type="submit" style="display: none;" />
}
@using (Html.BeginForm("Confirm", "Home"))
{
    <input type="text" id="functionalitySelected5" class="functionalitySelected" name="functionalitySelected" />
    <input type="text" id="data" class="functionalitySelected" name="data" />
    <input id="hidden-btn5" class="hidden-btn" type="submit" style="display: none;" />
}
<!-- A navegation bar which does not navigate, it only shows the chosen database name along with a button that
    allows the user to go to the corresponding page to change it, if needed and show the current page (receiving the functionality selected from the controller)-->
<nav class="navbar nav_color_1">
    <div id="Top-container">
        <div id="Top">
            <span class='database_icon'></span>
            <span class="top-text">@Model.Database</span>
            <button type="button" onclick='window.location.href="DatabaseConnection"' class="btn btn-default" data-toggle="tooltip" data-placement="auto" title="Change database"><span class='folder_icon'></span></button>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a id="selection-a" onclick="goToPage('MainPage', false)" style="color: orange;" MainPage">Home</a></li>
                <li class="breadcrumb-item"><a id="selection-a" onclick="goToSelection('@Model.Functionality')" style="color: orange;" Selection">Selection</a></li>
                <li class="breadcrumb-item"><a id="selection-a" onclick="goToPage('@Model.Functionality', false)" style="color: orange;" Create_Masks">Create Masks</a></li>
                <li class="breadcrumb-item active" aria-current="page">Data Masking Report</li>
            </ol>
        </div>
    </div>
</nav>
<!-- This part is the most complicated of this view
    It gets the data sent from the controller (double array with the database table names and column names of each table)
    Then it creates for each table an item of an accordion which when expanded shows its columns with checkboxes for all of those items-->
<div id="middle_container" class="left-half">
    <div id="selection-top" class="centeredBig">
        <h3>
            <span>Data Masking Report</span>
        </h3>
    </div>
    <div id="accordion" class="overflow-auto left-half" style="width:17vw;">
        <span class="font-weight-bold">Tables:</span>
        <br />
        @foreach (KeyValuePair<string, string[]> entry in Model.ColumnsSelected)
        {
            string collapse = "#collapse" + entry.Key;
            string CheckBox = entry.Key + "CheckBox";

            <div class="card">
                <div class="card-header nav_color_1" id="@entry.Key">
                    <h5>
                        <input type="checkbox" id="@CheckBox" name="@entry.Key" style="display: none;" />
                        <button class="btn btn-link" data-toggle="collapse" data-target="@collapse" aria-expanded="true" aria-controls="collapseOne">
                            @entry.Key
                        </button>
                    </h5>
                </div>

                <div id="@collapse.Substring(1)" class="collapse hide" aria-labelledby="@entry.Key" data-parent="#accordion">
                    <div class="card-body nav_color_2">
                        <span style="color: white;">@entry.Key columns: </span>
                        <br />
                        @for (int i = 0; i < ((string[])entry.Value).Length; i++)
                        {
                            string name = @entry.Key + '.' + @entry.Value[i];
                            string divName = name + "Div";
                            <input type="checkbox" id="@name" name="@name" onclick="checkParent('@CheckBox', '@name')" data-parent="@CheckBox" style="display: none;" /> <button class="btn btn-link" onclick="openTab(event, '@divName')">@entry.Value[i]</button>
                            <br />
                        }
                    </div>
                </div>

            </div>
        }
    </div>
    <div id="Tab-contents" class="overflow-auto">
        <div id="default" class="tabcontent">
            <h2 style="padding-top:35vh;">No column selected, select one from the dropdown on the left</h2>
        </div>
        @foreach (KeyValuePair<string, string[]> entry in Model.ColumnsSelected)
        {
            string[] pks =  Model.TablePks[entry.Key];
            string[][] pk_data = new string[pks.Length][];
            for (int i = 0; i < pks.Length; i++)
            {
                pks[i] = @entry.Key + '.' + pks[i];
                pk_data[i] = Model.Records[pks[i]];
            }

            for (int i = 0; i < entry.Value.Length; i++)
            {
                string name = @entry.Key + '.' + @entry.Value[i];
                string divName = name + "Div";
                string masked = name + "Masked";
                string[] record = Model.Records[name];
                string[] recordMasked = Model.Records[masked];

                <div id="@divName" class="tabcontent" style="display: none;">
                    <table class="table table-striped overflow-auto">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">Selections</th>
                                @for (int k = 0; k < pks.Length; k++)
                                {
                                    int l = k + 1;
                                    <th scope="col">Pk column @l (@pks[k].Substring(pks[k].IndexOf('.') + 1))</th>
                                }
                                <th scope="col">Original Column data (@entry.Value[i])</th>
                                <th scope="col">Data after applying mask (@entry.Value[i])</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int j = 0; j < record.Length; j++)
                            {
                                string idname = @entry.Value[i] + @j + "Record";
                                <tr>
                                    <th scope="row"><input type="checkbox" id="@idname" name="@idname" data-parent="@name" onclick="checkParent('@name', '@idname')" /></th>
                                    @for (int k = 0; k < pks.Length; k++)
                                    {
                                        <td>@pk_data[k][j]</td>
                                    }
                                    <td style="border-left: 1px solid;">@record[j]</td>

                                    <td>@recordMasked[j]</td>


                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            }
        }
    </div>
</div>
<!-- This part is perform whole actions like selecting everything or nothing and running the functionality with the selected items -->
<div id="controls">
    <div class="btn-group-vertical" role="group" style="padding-top: 20vh;">
        <button type="button" onclick="selectAll()" class="btn btn-outline-primary">Select All</button>
        <button type="button" onclick="selectRecords(true)" class="btn btn-outline-dark">Select Column Records</button>
        <button type="button" onclick="unselectRecords(true)" class="btn btn-outline-primary">Unselect Column Records</button>
        <button type="button" onclick="selectNone()" class="btn btn-outline-dark">Select None</button>
    </div>
    <br />
    <span id="records-selected" class="selection-text"></span>
    <br />
    <span id="columns-selected" class="selection-text">None selected</span>
    <br />
    <span id="tables-selected" class="selection-text"></span>
    <br />
    <div id="controls-inside">
        <button type="button" onclick='confirm("@Model.Functionality")' class="btn btn-outline-primary">Confirm and run</button>
    </div>
    <br />
    <div id="controls-inside">
        @{
            string filename = "data_masking_report" + DateTime.Now.ToString() + ".csv";
        }
        <button type="button" onclick="exportTableToCSV('@filename')" class="btn btn-outline-primary"><span class='download_icon'></span></button>
    </div>
</div>
