@{
    @using TFG.Models
    @model TFG.Models.Performance

    ViewData["Title"] = "Performance";
}
@using (Html.BeginForm("GoBackToPage", "Home"))
{
    <input type="text" id="functionalitySelected3" class="functionalitySelected" name="functionalitySelected" />
    <input id="hidden-btn3" class="hidden-btn" type="submit" style="display: none;" />
}
<!-- A navegation bar which does not navigate, it only shows the chosen database name along with a button that
    allows the user to go to the corresponding page to change it, if needed and show the current page (receiving the functionality selected from the controller)-->
<nav class="navbar nav_color_1">
    <div id="Top-container">
        <div id="Top">
            <span class='database_icon'></span>
            <span class="top-text">@Model.database</span>
            <button type="button" onclick='window.location.href="DatabaseConnection"' class="btn btn-default" data-toggle="tooltip" data-placement="auto" title="Change database"><span class='folder_icon'></span></button>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a id="selection-a" onclick="goToPage('MainPage', false)" style="color: orange;" Home">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Performance report</li>
            </ol>
        </div>
    </div>
</nav>
<!-- This part is the most complicated of this view
    It gets the data sent from the controller (double array with the database table names and column names of each table)
    Then it creates for each table an item of an accordion which when expanded shows its columns with checkboxes for all of those items-->
<div id="performance_container" class="left-half">
    <div id="selection-top" class="centeredBig">
        <h3>
            <span>Performance Report</span>
        </h3>
    </div>
    <div id="Tab-contents" class="overflow-auto">
        <table class="table table-striped overflow-auto">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Table name</th>
                    <th scope="col">Type</th>
                    <th scope="col">Rows</th>
                    <th scope="col">Reserved</th>
                    <th scope="col">Data</th>
                    <th scope="col">Index Size</th>
                    <th scope="col">Unused</th>
                    <th scope="col">Query Time</th>
                </tr>
            </thead>
            <tbody>
                @foreach (string table in Model.rows.Keys.ToArray())
                {
                    <tr>
                        <th scope="row" rowspan="2">@table</th>
                        <td style="border-left: 1px solid;">OLD</td>
                        <td style="border-left: 1px solid;">@Model.rows[table][0]</td>
                        <td>@Model.reserved[table][0]</td>
                        <td>@Model.data[table][0]</td>
                        <td>@Model.index_size[table][0]</td>
                        <td>@Model.unused[table][0]</td>
                        <td>@Model.query_time[table][0]</td>
                    </tr>
                    <tr>
                        <td style="border-left: 1px solid;">NEW</td>
                        <td style="border-left: 1px solid;">@Model.rows[table][1]</td>
                        <td>@Model.reserved[table][1]</td>
                        <td>@Model.data[table][1]</td>
                        <td>@Model.index_size[table][1]</td>
                        <td>@Model.unused[table][1]</td>
                        <td>@Model.query_time[table][1]</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!-- This part is perform whole actions like selecting everything or nothing and running the functionality with the selected items -->
<div id="performance_controls">
    <div id="selection-top">
        <h3>
            <span>Log</span>
        </h3>
    </div>
    <br />
    @foreach (string row in Model.log)
    {
        <span id="selection-text">@row</span>
        <br />
    }
    <div id="controls-inside">
        <button type="button" onclick="download()" class="btn btn-outline-primary"><span class='download_icon'></span></button>
    </div>
</div>
