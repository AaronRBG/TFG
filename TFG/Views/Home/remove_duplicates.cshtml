@{
    @using TFG.Models
    @model TFG.Models.Interchange

    ViewData["Title"] = "Remove Duplicates Report";
}
@using (Html.BeginForm("GoToSelection", "Home"))
{
    <input type="text" id="functionalitySelected1" class="functionalitySelected" name="functionalitySelected" />
    <input id="hidden-btn1" class="hidden-btn" type="submit" style="display: none;" />
}
@using (Html.BeginForm("GoBackToPage", "Home"))
{
    <input type="text" id="functionalitySelected3" class="functionalitySelected" name="functionalitySelected" />
    <input id="hidden-btn3" class="hidden-btn" type="submit" style="display: none;" />
}
@using (Html.BeginForm("Confirm", "Home"))
{
    <input type="text" id="functionalitySelected5" class="functionalitySelected" name="functionalitySelected" />
    <input type="text" id="data" class="functionalitySelected" name="data" />
    <input id="hidden-btn5" class="hidden-btn" type="submit" style="display: none;" />
}
<!-- A navegation bar which does not navigate, it only shows the chosen database name along with a button that
    allows the user to go to the corresponding page to change it, if needed and show the current page (receiving the functionality selected from the controller)-->
<nav class="navbar nav_color_1">
    <div id="Top-container">
        <div id="Top">
            <span class='database_icon'></span>
            <span class="top-text">@Model.Database</span>
            <button type="button" onclick='window.location.href="DatabaseConnection"' class="btn btn-default" data-toggle="tooltip" data-placement="auto" title="Change database"><span class='folder_icon'></span></button>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a id="selection-a" onclick="goToPage('MainPage', false)" style="color: orange;" MainPage">Home</a></li>
                <li class="breadcrumb-item"><a id="selection-a" onclick="goToSelection('@Model.Functionality')" style="color: orange;" Selection">Selection</a></li>
                <li class="breadcrumb-item active" aria-current="page">Remove Duplicates Report</li>
            </ol>
        </div>
    </div>
</nav>
<!-- This part is the most complicated of this view
    It gets the data sent from the controller (double array with the database table names and column names of each table)
    Then it creates for each table an item of an accordion which when expanded shows its columns with checkboxes for all of those items-->
<div id="middle_container" class="left-half">
    <div id="selection-top" class="centeredBig">
        <h3>
            <span>Remove Duplicates Report</span>
        </h3>
    </div>
    <div id="accordion" class="overflow-auto left-half" style="width:17vw;">
        <span class="font-weight-bold">Tables:</span>
        <br />
        @foreach (KeyValuePair<string, string[]> entry in Model.ColumnsSelected)
        {
            if (Model.Records.ContainsKey(entry.Key + '.' + entry.Value[0]))
            {
                string collapse = "#collapse" + entry.Key;
                string CheckBox = entry.Key + "CheckBox";
                string divName = entry.Key + "Div";

                <div class="card">
                    <div class="card-header nav_color_1" id="@entry.Key">
                        <h5>
                            <input type="checkbox" id="@CheckBox" name="@entry.Key" onclick="checkChilds('@CheckBox')" />
                            <button class="btn btn-link" onclick="openTab(event, '@divName', false)" data-toggle="collapse" data-target="@collapse" aria-expanded="true" aria-controls="collapseOne">
                                @entry.Key
                            </button>
                        </h5>
                    </div>
                </div>
            }
        }
    </div>
    <div id="Tab-contents" class="overflow-auto">
        <div id="default" class="tabcontent">
            <h2 style="padding-top:35vh;">No table selected, select one from the dropdown on the left</h2>
        </div>
        @foreach (KeyValuePair<string, string[]> entry in Model.ColumnsSelected)
        {
            if (Model.Records.ContainsKey(entry.Key + '.' + entry.Value[0]))
            {
                string divName = entry.Key + "Div";
                string[][] container = new string[entry.Value.Length][];
                string CheckBox = entry.Key + "CheckBox";

                for (int i = 0; i < entry.Value.Length; i++)
                {
                    string name = entry.Key + '.' + entry.Value[i];
                    container[i] = Model.Records[name];
                }

                <div id="@divName" class="tabcontent" style="display: none;">
                    <table class="table table-striped overflow-auto">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">Selections</th>
                                @for (int k = 0; k < entry.Value.Length; k++)
                                {
                                    <th scope="col">@entry.Value[k]</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @for (int j = 0; j < container[0].Length; j++)
                            {
                                string idname = @entry.Key + @j + "Record";
                                <tr>
                                    <th scope="row"><input type="checkbox" id="@idname" name="@idname" data-parent="@CheckBox" onclick="checkParent('@CheckBox', '@idname')" /></th>
                                    @for (int k = 0; k < entry.Value.Length; k++)
                                    {
                                        <td>@container[k][j]</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        }
    </div>
</div>
<!-- This part is perform whole actions like selecting everything or nothing and running the functionality with the selected items -->
<div id="controls">
    <div class="btn-group-vertical" role="group" style="padding-top: 20vh;">
        <button type="button" onclick="selectAll()" class="btn btn-outline-primary">Select All</button>
        <button type="button" onclick="selectRecords()" class="btn btn-outline-dark">Select Table Records</button>
        <button type="button" onclick="unselectRecords()" class="btn btn-outline-primary">Unselect Table Records</button>
        <button type="button" onclick="selectNone()" class="btn btn-outline-dark">Select None</button>
    </div>
    <br />
    <span id="records-selected" class="selection-text"></span>
    <br />
    <span id="columns-selected" class="selection-text">None selected</span>
    <br />
    <span id="tables-selected" class="selection-text"></span>
    <br />
    <div id="controls-inside">
        <button type="button" onclick='confirm("@Model.Functionality")' class="btn btn-outline-primary">Confirm and run</button>
    </div>
    <br />
    <div id="controls-inside">
        @{
            string filename = "remove_duplicates_report" + DateTime.Now.ToString() + ".csv";
        }
        <button type="button" onclick="exportTableToCSV('@filename')" class="btn btn-outline-primary"><span class='download_icon'></span></button>
    </div>
</div>
